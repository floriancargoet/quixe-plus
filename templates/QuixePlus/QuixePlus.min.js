!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).QuixePlus=e()}(this,(function(){"use strict";function t(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function e(t){return t.replace(/^I[^_]*_/,"")}if(!window.Quixe)throw new Error("Missing global Quixe");const r=window.Quixe.get_vm_internals();if(!r.getConstantString)throw new Error("Missing Quixe modification getConstantString()");function n(t){return r.Mem1(t)}const s={read1:t=>r.Mem1(t),read4:t=>r.Mem4(t),getGlobal:t=>r.Mem4(t),getParent:t=>112!==n(t)?null:r.Mem4(t+20),getFirstChild:t=>112!==n(t)?null:r.Mem4(t+28),getSibling:t=>112!==n(t)?null:r.Mem4(t+24),getAttribute(t,e){if(112!==n(t))return null;return!!(n(t+1+(e>>3))&1<<(7&e))},getProperty(t,e){if(112!==n(t))return null;const s=r.Mem4(t+16),a=r.Mem4(s+0);for(let t=0;t<a;t++){const n=s+4+10*t;if(r.Mem2(n+0)==e){const t=r.Mem4(n+4);return r.Mem4(t)}}return null},getConstantString:t=>r.getConstantString(t)};let a=new class{constructor(){t(this,"objectsByValue",{}),t(this,"arraysByValue",{}),t(this,"objectIDsByName",{}),t(this,"attributeIDsByName",{}),t(this,"propertyIDsByName",{})}init(t){Object.assign(this,t),Object.keys(this.objectsByID).forEach(t=>{const e=this.getObjectValueByID(t);this.objectsByValue[e]=t}),Object.keys(this.arraysByID).forEach(t=>{const e=this.getArrayByID(t),r=e[0];this.arraysByValue[r]=e}),Object.keys(this.objectsByID).forEach(t=>{this.objectIDsByName[e(t)]=t}),Object.keys(this.attributesByID).forEach(t=>{this.attributeIDsByName[function(t){return t.replace(/^p[0-9]+_/,"")}(t)]=t}),Object.keys(this.propertiesByID).forEach(t=>{this.propertyIDsByName[function(t){return t.replace(/^p[0-9]+_/,"")}(t)]=t})}getType(t){return this.objectsByValue[t]?"object":this.arraysByValue[t]?"array":"unknown"}getGlobalValueByID(t){const e=this.globalsByID[t];return s.getGlobal(e)}getObjectValueByID(t){return this.objectsByID[t]}getObjectIDByValue(t){return this.objectsByValue[t]}getObjectIDByName(t){return this.objectIDsByName[t]}getArrayByID(t){return this.arraysByID[t]}getArrayByValue(t){return this.arraysByValue[t]}getPropertyValueByID(t){return this.propertiesByID[t]}getPropertyIDByName(t){return this.propertyIDsByName[t]}getAttributeValueByID(t){return this.attributesByID[t]}getAttributeIDByName(t){return this.attributeIDsByName[t]}};window.gameinfo&&a.init(window.gameinfo);class i{static create(t){return new i(t)}constructor(e){t(this,"value",0),this.value=e}asArray(){return o.create(this.value)}asString(){return l.create(this.value)}asObject(){return c.create(this.value)}getValue(){return this.value}}class o extends i{static create(t,e=o){let r;return null==t&&(r=null),r="string"==typeof t?a.getArrayByID(t):a.getArrayByValue(t),r?new e(r):null}constructor([t,e,r,n]){const s=t;if(1!==r&&4!==r)throw new Error("Unsupported array: "+JSON.stringify({address:s,byteCount:e,bytesPerElement:r,zerothHasLength:n}));super(t),this.address=s,this.byteCount=e,this.bytesPerElement=r,this.length=e/r,this.zerothHasLength=n}atRaw(t){return t<0||t>this.length?null:1===this.bytesPerElement?s.read1(this.address+t):4===this.bytesPerElement?s.read4(this.address+4*t):void 0}at(t,e){const r=this.atRaw(t);return e===String?l.create(r).toString():e&&e.create?e.create(r):e?new e(r):r}toJSArray(){const t=[];for(let e=0;e<this.length;e++)t.push(this.atRaw(e));return t}}class l extends o{static create(t){return o.create(t,l)}toString(){const t=this.atRaw(1);return s.getConstantString(t)}}class c extends i{static mergeAttrMap(t){Object.assign(c.attrMap,t)}static create(t){let e,r;return null==t&&(e="nothing"),"string"==typeof t?e=t:r=t,e=e||a.getObjectIDByValue(r),r=r||a.getObjectValueByID(e),null==e||null==r?c.create("nothing"):new c(e,r)}constructor(r,n){if(null==r||null==n)throw new Error("Incorrect object creation");super(n),t(this,"id",""),t(this,"name",""),this.id=r,this.name=e(this.id)}getProperty(t,e){const r=a.getPropertyIDByName(t);if(!r)return null;const n=s.getProperty(this.value,a.getPropertyValueByID(r));return e===String?l.create(n).toString():e&&e.create?e.create(n):e?new e(n):n}getAttribute(t){const e=a.getAttributeIDByName(t);return e?Boolean(s.getAttribute(this.value,a.getAttributeValueByID(e))):null}is(t){let e=!1;"!"===t.charAt(0)&&(e=!e,t=t.slice(1)),"!"===(t=c.attrMap[t]||t).charAt(0)&&(e=!e,t=t.slice(1));const r=this.getAttribute(t);return e?!r:r}get children(){const t=[];let e=s.getFirstChild(this.value);if(e){let r=e;for(;r;)t.push(c.create(r)),r=s.getSibling(r)}return t}get parent(){return c.create(a.getObjectIDByValue(s.getParent(this.value)))}traverse(t){!function e(r){t(r);for(let t of r.children)e(t)}(this)}}t(c,"attrMap",{person:"animate",clothing:"wearable",undescribed:"concealed",inedible:"!edible",dark:"!light",unlockable:"!lockable",unlocked:"!locked",handled:"moved",off:"!on",closed:"!open","fixed in place":"static",portable:"!static",device:"switchable",opaque:"!transparent",room:"mark_as_room",thing:"mark_as_thing",lit:"light"});var u=Object.freeze({__proto__:null,InformValue:i,InformArray:o,InformString:l,InformObject:c});function h(t){return y(t)[0]||null}function y(t){let e=[];if("string"!=typeof t)throw new Error("query must be a string");try{if("*"===t)e=Object.keys(a.objectsByID).map(t=>c.create(t));else{const r=t.charAt(0),n=t.slice(1);if("."===r){const t=n.split(",");e=y("*").filter(e=>t.every(t=>e.is(t)))}else{const r=a.getObjectIDByName(t);r&&e.push(c.create(r));const n=o.create(t);n&&e.push(n);const s=a.getGlobalValueByID(t);s&&e.push(i.create(s))}}}catch(t){e=[]}return e}class g extends c{constructor(){const t=a.getGlobalValueByID("player");super(a.getObjectIDByValue(t),t)}get location(){return c.create(a.getGlobalValueByID("real_location"))}get inventory(){return this.children}has(t){let e=!1;return this.traverse(r=>{r.name===t&&(e=!0)}),e}}const p=[];window.game_options&&(window.game_options.before_select_hook=function(){p.forEach(t=>t.handleNewTurn())});function b(t){return h(t)}return Object.assign(b,u,{version:"0.0.1",all:y,mergeAttrMap:c.mergeAttrMap,Updater:class{constructor(e){t(this,"player",new g),this.spec=e,p.push(this),this.update()}handleNewTurn(){this.update()}update(){const t={player:this.player,location:this.player.location};Object.keys(this.spec).forEach(e=>{y(e).forEach(r=>this.spec[e](r,t))})}},Player:g,SVGMap:class{constructor(e){t(this,"url","./map.svg"),t(this,"mapSelector","#map"),t(this,"debug",!1),t(this,"onReady",()=>{}),Object.assign(this,e),this.log("map options",e),this.ready=this.initAsync()}log(...t){this.debug&&console.log(...t)}async initAsync(){const[t]=await Promise.all([this.load(this.url),new Promise($)]);this.$map=$(this.mapSelector),this.$map.html(t),this.$svg=this.$map.find("svg"),this.log("Map ready."),this.onReady()}async load(t){const e=await fetch(t);return await e.text()}$get(t,e){let r;r=e?`[data-${t}="${e}"]`:`[data-${t}]`;const n=this.$svg.find(r);return 0===n.length&&this.log(`$get(${t}, ${e}) returned nothing. Check the data-* attributes in you SVG.`),n}},internals:{gameinfo:a,VM:s}}),window.QQ=y,window.Q=h,b}));
